<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.actorfw.infra.modules.member.MemberMapper">

	<resultMap type="com.actorfw.infra.modules.member.Member" id="resultObj"></resultMap>

	<select id="selectList" resultMap="resultObj">
		SELECT 
			*
		FROM member
		WHERE 1=1
		<choose>
			<when test="shOption == 1"> AND seq = #{shValue} </when>
			<when test="shOption == 2"> AND name LIKE CONCAT ('%',#{shValue},'%') </when>
		</choose>
		<choose>	
			<when test="shUseOption == 0"> AND useNy LIKE CONCAT (0)</when>
			<when test="shUseOption == 1"> AND useNy LIKE CONCAT (1)</when>
		</choose>
		<choose>	
			<when test="shDelOption == 0"> AND useNy LIKE CONCAT (0)</when>
			<when test="shDelOption == 1"> AND useNy LIKE CONCAT (1)</when>
		</choose>
		ORDER BY seq DESC
	</select>
	
	<select id="selectOne" resultMap="resultObj">
		SELECT
			*
		FROM member 
		WHERE 1=1
		AND seq = #{seq}
	</select>
	
	<insert id="insertCd">
		INSERT INTO member (
			user_type
			,id
			,password
			,name
			,dob
			,gender
			,email
			,email_domain
			,telecom
			,phone_number
			,director_type
			,actor_picture
			,actor_height
			,actor_weight
			,actor_eyelid
			,actor_voice
			,age
			,company_useNy
			,zip_code
			,address
			,address_detail
			,address_Lat
			,address_Lng
			,delNy
			,creDate
			,modDate
			,adminNy
			,actor_specialty
			,aboutMe
		)
		VALUES (
			#{user_type}
			,#{id}
			,#{password}
			,#{name}
			,#{dob}
			,#{gender}
			,#{email}
			,#{email_domain}
			,#{telecom}
			,#{phone_number}
			,#{director_type}
			,#{actor_picture}
			,#{actor_height}
			,#{actor_weight}
			,#{actor_eyelid}
			,#{actor_voice}
			,#{age}
			,#{company_useNy}
			,#{zip_code}
			,#{address}
			,#{address_detail}
			,#{address_Lat}
			,#{address_Lng}
			,#{delNy}
			,#{creDate}
			,#{modDate}
			,#{adminNy}
			,#{actor_specialty}
			,#{aboutMe}
		)
		<selectKey resultType="String" keyProperty="seq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<!-- <insert id="insertSnsCd">
		INSERT INTO actor_sns (
			seq AS sns_seq
			,type AS sns_type
			,url
			,member_seq
		)
		VALUES (
			#{sns_seq}
			,#{sns_type}
			,#{url}
			,#{member_seq}
		)
		<selectKey resultType="String" keyProperty="seq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert> -->
	
	<update id="updateCd">
		UPDATE member
		SET
			seq 				= #{seq}
			,user_type 			= #{user_type}
			,id 				= #{id}
			,password 			= #{password}
			,name 				= #{name}
			,dob 				= #{dob}
			,gender 			= #{gender}
			,email 				= #{email}
			,email_domain 		= #{email_domain}
			,telecom 			= #{telecom}
			,phone_number 		= #{phone_number}
			,director_type 		= #{director_type}
			,actor_picture 		= #{actor_picture}
			,actor_height 		= #{actor_height}
			,actor_weight 		= #{actor_weight}
			,actor_eyelid 		= #{actor_eyelid}
			,actor_voice 		= #{actor_voice}
			,age 				= #{age}
			,company_useNy 		= #{company_useNy}
			,zip_code 			= #{zip_code}
			,address 			= #{address}
			,address_detail 	= #{address_detail}
			,address_Lat 		= #{address_Lat}
			,address_Lng 		= #{address_Lng}
			,delNy 				= #{delNy}
			,creDate 			= #{creDate}
			,modDate 			= #{modDate}
			,adminNy 			= #{adminNy}
			,actor_specialty 	= #{actor_specialty}
			,aboutMe 			= #{aboutMe}
		WHERE 1=1
			AND seq = #{seq}
	</update>
	
	<!-- 아이디중복 체크 -->
	<select id="idCheck" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			member a
		WHERE 1=1
			AND id = #{id}
	</select>
	
	<!-- 로그인세션 -->
	<select id="logInCd" resultMap="resultObj">
		SELECT
			seq
			,id
			,password
			,name
			,adminNy
		FROM 
			member
		WHERE 1=1
			AND id = #{id}
			AND password = #{password}
	</select>
	
	<select id="selectLastSeq" resultType="Integer"> <!-- 마지막 seq 조회 -->
		SELECT
			seq
		FROM member
		ORDER BY seq DESC
		LIMIT 1
	</select>
	
	<insert id="insertMemberUpload">
		INSERT INTO memberUploaded (
			<!-- seq -->
			type
			,defaultNy
			,sort
			,path
			,originalName
			,uuidName
			,ext
			,size
			,delNy
			,pseq
		)
		VALUES (
			<!-- #{seq} -->
			#{type}
			,#{defaultNy}
			,#{sort}
			,#{path}
			,#{originalName}
			,#{uuidName}
			,#{ext}
			,#{size}
			,0
			,#{pseq}
		)
	</insert>










</mapper>